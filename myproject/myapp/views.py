import string
from django.contrib.auth import login, authenticate
from django.contrib.auth.decorators import login_required
from django.db import IntegrityError
from django.http import JsonResponse
from django.shortcuts import redirect, render
from django.views.decorators.http import require_POST
from myapp.models import User, InviteActivation
import random


def get_ref():
    while True:
        ref = ''.join(random.choices(string.ascii_letters + string.digits, k=6))
        if not User.objects.filter(ref_code=ref).exists():
            return ref

def get_key(request):
    chars = string.digits
    result = []
    for _ in range(4):
        result.append(random.choice(chars))
    print(f'üóùÔ∏è –Æ–∑–µ—Ä-–∫–ª—é—á: {"".join(result)}')
    return JsonResponse({
        'status': 'success',
        'key': ''.join(result)
    })

def auth_form(request):
    if 'user_id' in request.session:
        return redirect('index')
    return render(request, 'auth.html')

@require_POST
def unified_auth(request):

    try:
        username = request.POST.get('username')
        password = request.POST.get('password')
        number_phone = request.POST.get('number_phone')
        user_key = request.POST.get('user_key', '').strip()
        right_key = request.POST.get('right_key', '').strip()

        print(f"""
        {'~' * 25}
        üë§ –Æ–∑–µ—Ä–Ω–µ–π–º:   {username}
        üîë –ü–∞—Ä–æ–ª—å:     {password}
        üìû –¢–µ–ª–µ—Ñ–æ–Ω:    {number_phone}
        üóùÔ∏è –Æ–∑–µ—Ä-–∫–ª—é—á:  {user_key}
        ‚úÖ –í–µ—Ä–Ω—ã–π –∫–ª—é—á: {right_key}
        {'~' * 25}
        """)
        if not all([username, password, number_phone]):
            return JsonResponse({'status': 'error', 'message': '–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã'}, status=400)

        if user_key != right_key:
            return JsonResponse({'status': 'error', 'message': '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥'}, status=400)

        user = authenticate(username=username, password=password)
        if user:
            user.number_phone = number_phone
            user.save(update_fields=['number_phone'])
            login(request, user)
            return JsonResponse({'status': 'success'})

        try:
            user = User.objects.create_user(
                username=username,
                password=password,
                number_phone=number_phone,
                ref_code=get_ref()
            )
            login(request, user)
            return JsonResponse({'status': 'success'})

        except IntegrityError:
            return JsonResponse({'status': 'error', 'message': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}, status=400)

    except Exception as e:
        print(e)
        return JsonResponse({'status': 'error', 'message': '–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞'}, status=500)


def profile_page(request):
    context = {
        'phone': request.user.number_phone,
        'my_invite_code': request.user.ref_code,
        'invited_users': User.objects.filter(
            invited__inviter=request.user
        ).values_list('number_phone', flat=True)
    }

    try:
        context['inviter'] = InviteActivation.objects.get(
            invited=request.user
        ).inviter.number_phone
    except InviteActivation.DoesNotExist:
        context['inviter'] = None

    return render(request, 'profile.html', context)


@login_required
@require_POST
def add_inviter(request):
    inviter_code = request.POST.get('inviter', '').strip()
    print(f'{inviter_code} –∏–Ω–≤–∞–π—Ç –∫–æ–¥')
    if not inviter_code:
        return JsonResponse({
            'status': 'error',
            'message': '–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥'
        }, status=400)

    if len(inviter_code) != 6:
        return JsonResponse({
            'status': 'error',
            'message': '–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 6 —Å–∏–º–≤–æ–ª–æ–≤'
        }, status=400)

    try:

        inviter = User.objects.get(ref_code=inviter_code)
    except User.DoesNotExist:
        return JsonResponse({
            'status': 'error',
            'message': '–ò–Ω–≤–∞–π—Ç-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω'
        }, status=404)

    if inviter.id == request.user.id:
        return JsonResponse({
            'status': 'error',
            'message': '–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥'
        }, status=400)

    if InviteActivation.objects.filter(invited=request.user).exists():
        return JsonResponse({
            'status': 'error',
            'message': '–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥'
        }, status=400)

    InviteActivation.objects.create(
        inviter=inviter,
        invited=request.user
    )

    request.user.inviter = inviter
    request.user.save()

    return JsonResponse({
        'status': 'success',
        'message': f'–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {inviter.username}!',
        'inviter_username': inviter.username,
        'inviter_phone': inviter.number_phone or ''
    })

